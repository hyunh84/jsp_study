/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.21
 * Generated at: 2015-09-13 04:19:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class j04_005fpeo022_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t* {margin:0; padding:0;}\r\n");
      out.write("\th2 {padding:20px 10px;}\r\n");
      out.write("\ttable {border-collapse:collapse; }\r\n");
      out.write("\ttable th {padding:5px; border:1px solid #777;}\r\n");
      out.write("\ttable td {padding:5px; border:1px solid #777;}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/Day04/js/jquery-1.11.3.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h2>DB - 인사정보 접속 및 레코드 저장</h2>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t \r\n");
      out.write("\t ");

	 	String msg = null;	
	 
	 	try{
	 		//1. 
	 		Class.forName("oracle.jdbc.driver.OracleDriver");
	 		System.out.println("#1. Driver Load End");
	 		
	 		//2. DB Connection
	 		String url = "jdbc:oracle:thin:@192.168.33.108:1521:xe";
	 		String user = "para";
	 		String password = "para";
	 		
	 		Connection conn = DriverManager.getConnection(url, user, password);
	 		System.out.println("#2. Connection Comp");
	 		
	 		//3. SQL 작성 및 실행
	 		
	 		//String sql = "insert into peoinfo values(번호, 이름, 나이, 등록일)";
	 		String sql = "insert into peoinfo values(peopleinfo_seq.nextval, ?, ?, sysdate)";
	 		// 변수로 값을 넣을 자리에 ?를 입력한다.
	 		
	 		
	 		request.setCharacterEncoding("utf-8");
	 		String name = request.getParameter("name");
	 		String rcv = request.getParameter("age");
	 		int age = Integer.parseInt(rcv);
	 		
	 		PreparedStatement ps = conn.prepareStatement(sql);
	 		ps.setString(1, name);
	 		ps.setInt(2, age);
	 		
	 		int res = ps.executeUpdate();
	 		if(res > 0) {
	 			msg = "저장이 완료되었습니다.";	 			
	 		}else{
	 			msg = "저장이 실패했습니다.";	 			
	 		}
	 		
	 		//4. 종료
	 		ps.close();//conn을먼저 닫으면 ps를 닫을 수 없음
	 		conn.close();
	 		
	 	}catch(Exception e){
	 		e.printStackTrace();
	 	}
	 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\t \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"");
      out.print(msg);
      out.write("\");\r\n");
      out.write("\t\tlocation.href=\"/Day04/j04_peo01.jsp\";\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
