/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.21
 * Generated at: 2015-10-11 01:36:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.oreilly.servlet.MultipartRequest;
import java.sql.*;

public final class j06_005ffile02_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.oreilly.servlet.MultipartRequest");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t* {margin:0; padding:0;}\r\n");
      out.write("\ta {color:#555; text-decoration:none;}\r\n");
      out.write("\ta:hover {color:blue; text-decoration:underline;}\r\n");
      out.write("\th2 {padding:20px 10px;}\r\n");
      out.write("\ttable {border-collapse:collapse; }\r\n");
      out.write("\ttable th {padding:5px; border:1px solid #777;}\r\n");
      out.write("\ttable td {padding:5px; border:1px solid #777;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h2></h2>\r\n");
      out.write("\t<hr />\r\n");
      out.write("\t\r\n");
      out.write("\t");

	
		//MultipartRequest	
		//파일을 쉽게 이용할 수 있도록 제공하는 클래스
		//다운로드 위치 : www.servlets.com -> com.Oreilly.Servlet -> 다운로드
		//cos~.jar파일 -> 압축 푼 후 cos.jar파일 복사 및 이용
		
		//생성자 인자값
		//1. 첫번째 인자 : request
		//2. 두번째 인자 : 파일을 저장할 위치 (웹서버 경로)
		//3. 세번째 인자 : 최대 처리 파일 크기 설정 (바이트 단위)
		//(예 : 30메가 = 1024*1024*30)
		//4. 네번째 인자 : 파일 이름에 대한 인코딩 방식
		//(파일이름이 한글일 경우 EUC-KR 또는 UTF-8등 설정)
		
		
		String realPath = application.getRealPath("/upfile");
		//대상 폴더에 대해서, 서버에서의 실제 위치 경로를 자동으로 제공하는 명령
		
		System.out.println("실제 사진이 저장되는 이클립스 내부 서버의 경로 : " + realPath);
		
		String upRoot = "C:\\hyunh\\MyWorks\\Day07\\WebContent\\upfile";
		
		MultipartRequest mr = new MultipartRequest(request, upRoot, 1024*1024*3, "utf-8");
			
	
		//String title = request.getParameter("title");
		
		String msg = null;
		
		try{
			//1. DriverLoad
			Class.forName("oracle.jdbc.driver.OracleDriver");
			System.out.println("#1. Driver Load End");
			
			//2. DB Connection
			String url = "jdbc:oracle:thin:@192.168.33.121:1521:xe";
			String user = "para";
			String password = "para";
			Connection conn = DriverManager.getConnection(url, user, password);
			
			System.out.println("#2.DB Connection Comp");
			
			//3. SQL(insert) && executeUpdate
			String title = mr.getParameter("title");
			
			String orgName = mr.getOriginalFileName("upfile");
			//파일의 실제 이름
			System.out.println("파일의 실제 이름 orgName : " + orgName);
			
			String addr = realPath + orgName;
			//파일 삭제 시 사용할 실제경로
			System.out.println("파일 삭제 경로 : " + addr);
			
			String link = "/Day07/upfile/" + orgName;
			//화면에 보여줄 때 사용되는 web경로
			
			
			String sql = "insert into fileinfo values(fileinfo_seq.nextval, ?, ?, ?, ?, sysdate)";
			
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setString(1, title);
			ps.setString(2, orgName);
			ps.setString(3, addr);
			ps.setString(4, link);
			
			int res = ps.executeUpdate();
			
			if(res > 0) {
				msg = "저장완료";
			}else{
				msg = "저장실패";
			}
			
			ps.close();
			conn.close();
			
			
		}catch(Exception e){
			e.printStackTrace();
		}
		
			
		
	
	
	
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"");
      out.print(msg);
      out.write("\");\r\n");
      out.write("\t\tlocation.href = \"/Day07/j06_file03.jsp\";\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
